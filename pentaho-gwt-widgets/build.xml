<!--===========================================================================
  This is the build file for the Pentaho GWT Widgets project.
  
  This build file will use the common_build.xml file as the default build
  process and should only override the tasks that need to differ from
  the common build file.
  
  See common_build.xml for more details
============================================================================-->
<project name="Pentaho GWT Widgets" basedir="." default="jar" xmlns:ivy="antlib:org.apache.ivy.ant">

  <description>
	  This build file is used to create the Pentaho GWT Widgets project
		and works with the common_build.xml file.
	</description>

  <!-- Define the default location of the common build file -->
  <property name="common.build.file"
            value="./common_build.xml"
            description="This is the location of the standardized common_build.xml file" />

  <!-- Import the common_build.xml file which contains all the default tasks -->
  <import file="${common.build.file}" />

  <!--
      AS STATED ABOVE, THE ONLY TASKS THAT SHOULD EXIST IN THIS BUILD FILE ARE
      THE TASKS THAT NEED TO DIFFER FROM THE DEFAULT IMPLEMENTATION OF THE TASKS
      FOUND IN common_build.xml.
    -->

  <!--=======================================================================
      resolve
      
      Resolve all the ivy dependencies that are development-only
      dependencies.
      ====================================================================-->
  <target name="resolve" depends="resolve-init" description="Retrieves all the dependent libraries">
  	<ant antfile="${basedir}/common_build.xml" target="resolve"/>
  	
    <property name="ivy.codegen.config" value="codegen-win" />
    <condition property="ivy.codegen.config" value="codegen-mac">
      <os family="mac" />
    </condition>
    <condition property="ivy.codegen.config" value="codegen-linux">
      <os family="unix" />
    </condition>

    <ivy:resolve conf="codegen" />
    <ivy:retrieve conf="codegen" pattern="${lib.dir}/[module]-[revision].[ext]" />
    <ivy:resolve conf="${ivy.codegen.config}" />
    <ivy:retrieve conf="${ivy.codegen.config}" pattern="${lib.dir}/[module]-[revision].[ext]" />
  </target>

</project>
